generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  username String @unique
  password String
  salt String
  createdAt DateTime @default(now())
  memberships WorldMembership[]
  events Event[]
  RSVPs EventRSVP[]
  notes Note[]
}

model World {
  id String @id @default(cuid())
  name String
  description String
  createdAt DateTime @default(now())
  joinCode JoinCode?
  memberships WorldMembership[]
  bosses WorldBossProgress[]
  notes Note[]
  events Event[]
}

model WorldMembership {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  world World @relation(fields: [worldId], references: [id])
  worldId String
  role Role @default(MEMBER)
  @@unique([userId, worldId])
}

enum Role {
  OWNER
  ADMIN
  SUB_ADMIN
  MEMBER
}

model JoinCode {
  id String @id @default(cuid())
  code String @unique
  world World @relation(fields: [worldId], references: [id])
  worldId String @unique
  createdAt DateTime @default(now())
}

model Boss {
  id String @id @default(cuid())
  name String @unique
  health String
  stage String
  worldProgress WorldBossProgress[]
}

model WorldBossProgress {
  id String @id @default(cuid())
  boss Boss @relation(fields: [bossId], references: [id])
  bossId String
  world World @relation(fields: [worldId], references: [id])
  worldId String
  killed Boolean
}

model Note {
  id String @id @default(cuid())
  title String
  content String
  author User @relation(fields: [authorId], references: [id])
  authorId String
  world World @relation(fields: [worldId], references: [id])
  worldId String
  createdAt DateTime @default(now())
}

model Event {
  id String @id @default(cuid())
  name String
  description String
  scheduledAt DateTime
  world World @relation(fields: [worldId], references: [id])
  worldId String
  createdBy User @relation(fields: [createdById], references: [id])
  createdById String
  RSVPs EventRSVP[]
}

model EventRSVP {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  event Event @relation(fields: [eventId], references: [id])
  eventId String
  @@unique([userId, eventId])
}